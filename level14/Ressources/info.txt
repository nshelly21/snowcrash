level14

Результаты перевода
Для этой задачи нет файла, который можно было бы использовать, после некоторых поисков я решил попробовать отменить / bin / getflag

После некоторого копания я понял, что он использует ту же внутреннюю работу, что и двоичный файл level13, так же как и эксплойт (вроде) с изюминкой: при реверсировании с помощью gdb двоичный файл обнаруживает, что вы используете gdb, и выводит «Вы не должны отменять это». используя для этого ptrace, поэтому нам нужно "подделать" вывод ptrace, чтобы обойти эту защиту:


$ gdb getflag
(gdb) b *main+72
Breakpoint 1 at 0x804898e
(gdb) r
Starting program: /bin/getflag

Breakpoint 1, 0x0804898e in main ()
(gdb) p $eax=0
$1 = 0
(gdb) b *main+444
Breakpoint 2 at 0x8048b02
(gdb) continue
Continuing.

Breakpoint 2, 0x08048b02 in main ()
(gdb) p $eax=3014
$2 = 3014
(gdb) continue
Continuing.
Check flag.Here is your token : 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
[Inferior 1 (process 2320) exited normally]


   0x08048989 <+67>:    call   0x8048540 <ptrace@plt>
   0x0804898e <+72>:    test   %eax,%eax

   0x08048afd <+439>:    call   0x80484b0 <getuid@plt>
   0x08048b02 <+444>:    mov    %eax,0x18(%esp)

